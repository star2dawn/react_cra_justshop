깃허브 깃설정 및 커밋 & 푸쉬 & 배포 & 페이징

https://github.com/star2dawn/just_shop.git

1. 웹브라우저 오픈 github 로그인
2. 리포지토리 만들기

로컬 프로젝트 작업위치
3. 경로 확인
깃배쉬에서 ls -la
$ ls -la
total 1534
drwxr-xr-x 1 Administrator 197121       0 12월  5 10:09  ./
drwxr-xr-x 1 Administrator 197121       0 12월  5 09:52  ../
-rw-r--r-- 1 Administrator 197121     310 11월 25 10:07  .gitignore
drwxr-xr-x 1 Administrator 197121       0 12월  5 10:04  node_modules/
-rw-r--r-- 1 Administrator 197121     835 11월 25 10:17  package.json
-rw-r--r-- 1 Administrator 197121 1200250 12월  5 10:04  package-lock.json       
drwxr-xr-x 1 Administrator 197121       0 12월  5 09:56  public/
-rw-r--r-- 1 Administrator 197121    3359 11월 25 10:07  README.md
drwxr-xr-x 1 Administrator 197121       0 12월  5 10:02  src/
-rw-r--r-- 1 Administrator 197121     260 12월  5 10:20  깃허브.txt
-rw-r--r-- 1 Administrator 197121    2056 11월 25 11:12 '리액트 CRA_실행순서.txt'
-rw-r--r-- 1 Administrator 197121    2506 11월 25 21:04  리액트CRA_실행순선.txt  

4. 깃설정
git init
$ git init
Initialized empty Git repository in C:/신은빈/1205_JUST_SHOP_깃허브_배포/.git/
깃설정 목록확인
ls -la 
drwxr-xr-x 1 Administrator 197121       0 12월  5 10:21  .git/

깃환경설정

사용자 이름
사용자 이메일
git config user.name "star2dawn"
git config user.email "sin001215@naver.com"

// 화면 청소 
// clear

name 확인하기
email 확인하기 

git config user.name
git config user.email

//////////////////
깃허브 원격지 리포지토리(저장소) 주소 지정 origin(url)

git remote add origin https://github.com/star2dawn/just_shop.git

원격지 리포지토리(저장소) 주소 확인하기
git remote -v

$ git remote -v
origin  https://github.com/star2dawn/just_shop.git (fetch) 
origin  https://github.com/star2dawn/just_shop.git (push) 

주소확인 이상없다

만약 잘못된 주소면 삭제하기
git remote remove origin
확인도 꼭!! git remote -v

///////////////////////////////////////////////////////////////////////////////////////
스테이징 하기

모든(All = .) 파일 스테이징
git add .

///////////////////////////////////////////////////////////////////////////////////////
 커밋 하기 (-m = message)

 git commit -m  '리액트 create-react-app 저스트 쇼핑몰'

 //////////////////////////////////////////////////////////////////////////////////////
 푸쉬하기 (push)

 git push origin master

 //////////////////////////////////////////////////////////////////////////////////////


 웹페이지 또는 파일 수정 시 
 다시 푸쉬하기
 스테이징부터 다시
 git add .
 git commit  -m  '리액트 create-react-app 저스트 쇼핑몰 확장자 js => jsx 수정'
 git push origin master


 /////////////////////////////////////////////////////////////////
 배포하기 (페이징)
 1. 상단메뉴 Settings 클릭
 2. 좌측 메뉴 Pages 메뉴 클릭
 3. GitHub Pages
 4. Branch
    GitHub Pages is currently disabled. Select a source below to enable GitHub Pages for this repository.

    None / Save 부분에서
    none 클릭 셀렉트 박스 열리면
    master로 선택
    우측 save  클릭

 5. 새로고침
 ctrl+shift+r 

 Your site is live at https://star2dawn.github.io/just_shop/
 https://star2dawn.github.io/just_shop/
 꼭 30초 ~ 1분 대기 하고 접속하기

배포주소
https://star2dawn.github.io/just_shop/

6. Deployment => GitHub Pages 위치로 내려온다

package.json = > 깃허브 배포주소 속성과 주소 추가하기
/////////////////////////////////////////////////

step1 : Add homepage to package.json
포트폴리오 프로젝트
package.json 에디터에서 연다

맨 아래쪽에 추가하기
"homepage": "https://star2dawn.github.io/just_shop/" //배포주소//

step2 : Install gh-pages and add deploy to scripts in package.json
//////////////////////////////////////////////////////
gh-pages => npm i gh-pages
            =
            npm install --save gh-pages
/////////////////////////////////////////////////////
package.json 에서 scripts 에 
    "predeploy": "npm run build",
    "deploy": "gh-pages -b master -d build",
    넣기


Step 3: Deploy the site by running npm run deploy
////////////////////////////////
npm run deploy
///////////////////////////////


7. 빌드하기
npm run build


/////////////////////////////
원본 소스만 올리기

기존주소삭제
git remote remove origin
삭제주호확인
git remote -v

깃허브 원격지 저장소 주소 추가 지정
git remote add origin https://star2dawn.github.io/just_shop/

git add .
git commit -m '저스트 쇼핑몰 cra 원본 소스'
git push origin master
